import runtime

type Struct = struct {
    a: &int
}

def some_function {
    let a: &int = 10
    let s: &Struct = {}

    let ref = s.a !runtime::Ref
    print(ref, "\n")

    // call __destruct__::(*Struct)(s !*Struct)

    let i = allocate(int)
    delete(i)
}

def delete(a: type *T) {
    #if defined __destruct__::(*T) {
        __destruct__(a)
    }
    free(a)
}

some_function