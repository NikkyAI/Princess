import lexer
import parser
import getopt
import tests

let filename = getopt::get_opt(args, "-c", "--compile", "")
let test = getopt::get_flag(args, "-t", "--test")

if test {
    tests::run_test_suite()
} else {
    if length(filename) > 0 {
        let fh = open(filename, "rb")
        if not fh {
            print("File \"", filename, "\" doesn't exist\n")
        } else {
            seek(fh, 0, SEEK_END)
            let filesize = tell(fh)
            rewind(fh)
            let buf = allocate(char, filesize + 1)
            read(fh, buf, filesize)
            buf[filesize] = '\0'
            
            let tokens = lexer::lex(buf)
            //lexer::print_token_list(tokens)
            let node = parser::parse(tokens)

            //lexer::free_token_list(tokens)
            free(buf)
        }
        close(fh)
    } else {
        print("File argument required\n")
    }
}

