import getopt
import tests
import test_parser
import test_compiler
import toolchain

let filename = getopt::get_opt(args, "-c", "--compile", "")
let test = getopt::get_flag(args, "-t", "--test")
let print_ast = getopt::get_flag(args, "-a", "--ast")
let print_ll = getopt::get_flag(args, "-l", "--ll")

// TODO Support multiple includes separated by ;
// TODO Also return a string here...
let env: *char = getenv("PRINCESS_PATH")
if not env {
    error("PRINCESS_PATH not set\n")
    exit(-1)
}

var libdir: string
libdir.value = env
libdir.size = strlen(env) + 1

let cdir = allocate(char, PATH_MAX)
absolute_path(".", cdir)
cdir.size = strlen(cdir) + 1

toolchain::include_path = allocate(string, 2)
toolchain::include_path[0] = libdir
toolchain::include_path[1] = cdir

if test {
    test_parser::print_ast = print_ast
    test_compiler::print_ll = print_ll
    tests::run_test_suite()
} else {
    if length(filename) > 0 {
        toolchain::compile_file(filename, "main")
        if toolchain::error_count > 0 {
            error("\nTotal errors: ", toolchain::error_count, "\n")
        }
    } else {
        error("File argument required\n")
    }
}

