import lexer
import parser
import getopt
import tests
import util
import debug

let filename = getopt::get_opt(args, "-c", "--compile", "")
let test = getopt::get_flag(args, "-t", "--test")
let print_ast = getopt::get_flag(args, "-a", "--ast")

if test {
    if print_ast {
        tests::print_ast = true
    }
    tests::run_test_suite()
} else {
    if length(filename) > 0 {
        let fh = open(filename, "rb")
        if not fh {
            print("File \"", filename, "\" doesn't exist\n")
        } else {
            seek(fh, 0, SEEK_END)
            let filesize = tell(fh)
            rewind(fh)
            let buf = allocate(char, filesize + 1)
            read(fh, buf, filesize)
            buf[filesize] = '\0'
            let lines = util::split_lines(buf)

            let tokens = lexer::lex(buf)
            free(buf)
            let node = parser::parse(tokens, lines)
            debug::print_node(node)
        }
        close(fh)
    } else {
        print("File argument required\n")
    }
}

