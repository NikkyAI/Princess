import getopt
import tests
import test_parser
import toolchain

let filename = getopt::get_opt(args, "-c", "--compile", "")
let test = getopt::get_flag(args, "-t", "--test")
let print_ast = getopt::get_flag(args, "-a", "--ast")

if test {
    if print_ast {
        test_parser::print_ast = true
    }
    tests::run_test_suite()
} else {
    if length(filename) > 0 {
        // TODO Support multiple includes separated by ;
        // TODO Also return a string here...
        let env: *char = getenv("PRINCESS_PATH")
        if not env {
            error("PRINCESS_PATH not set\n")
            exit(-1)
        }
        
        var libdir: string
        libdir.value = env
        libdir.size = strlen(env) + 1

        let cdir = allocate(char, PATH_MAX)
        absolute_path(".", cdir)
        cdir.size = strlen(cdir) + 1

        toolchain::include_path = allocate(string, 2)
        toolchain::include_path[0] = libdir
        toolchain::include_path[1] = cdir

        toolchain::compile_file(filename)
    } else {
        error("File argument required\n")
    }
}

