import lexer
import buffer

def test_string_literal {
    var str = "\"this is a test\""
    var result = lexer::lex(str)
    assert((@result).value.tpe == lexer::TokenType::STRING)
    var value = @((@result).value.value !*string)
    assert(value == "this is a test")
}

def test_lexer {
    test_string_literal()
}

def test_buffer {
    var str = "this is a test"
    var buf = buffer::make_buffer()
    buffer::append_str(*buf, str)
    var res = buffer::to_string(*buf)
    assert(res == str)
    free(res)
    buffer::append_char(*buf, 't')
    res = buffer::to_string(*buf)
    assert(res == "this is a testt")
    free(res)
}

export def run_test_suite {
    test_lexer()
    test_buffer()
}