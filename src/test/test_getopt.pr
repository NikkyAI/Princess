import getopt

import test::testsuite

def test_positional {
    print(">Test positional arguments... \n")
    let args = ["test", "some", "arg", "more"]
    let options = [
        getopt::option("arg1", "Argument 1"),
        getopt::option("arg2", 2, "Argument 2")
    ]
    if not getopt::parse(args, options) { tassert(false) }

    print("arg1: ", options[0].value.str, "\n")
    
    print("arg2: ")
    let arg2 = options[1].value.arr
    for var i in 0..arg2.size {
        print(arg2[i], " ")
    }
    print("\n")

    print("OK\n")
}

def test_longopts {
    print(">Test longopts... \n")
    let args = [
        "test",
        "--arg1", 
        "--arg2=test", 
        "--arg3", "test", 
        "--arg4", "foo", "bar"
    ]
    let options = [
        getopt::option("--arg1", false, "Argument 1"),
        getopt::option("--arg2", "Argument 2"),
        getopt::option("--arg3", "Argument 3"),
        getopt::option("--arg4", 2, "Argument 4"),
        getopt::option("--arg5", "default", "Argument 5")
    ]
    if not getopt::parse(args, options) { tassert(false) }

    print("arg1: ", options[0].value.b !int, "\n")
    print("arg2: ", options[1].value.str, "\n")
    print("arg3: ", options[2].value.str, "\n")
    print("arg4: ", options[3].value.arr[0], " ", options[3].value.arr[1], "\n")
    print("arg5: ", options[4].value.str, "\n")

    print("OK\n")
}

def test_shortopts {
    print(">Test shortopts... \n")
    let args = [
        "test",
        "-ab",
        "-cFoo",
        "-d", "test",
        "-e", "foo", "bar"
    ]
    let options = [
        getopt::option('a', "--arg1", false, "Argument 1"),
        getopt::option('b', "--arg2", true, "Argument 2"),
        getopt::option('c', "--arg3", "Argument 3"),
        getopt::option('d', "--arg4", "Argument 4"),
        getopt::option('e', "--arg5", 2, "Argument 5")
    ]
    if not getopt::parse(args, options) { exit(-1) }

    print("a: ", options[0].value.b !int, "\n")
    print("b: ", options[1].value.b !int, "\n")
    print("c: ", options[2].value.str, "\n")
    print("d: ", options[3].value.str, "\n")
    print("e: ", options[4].value.arr[0], " ", options[4].value.arr[1], "\n")

    print("OK\n")
}

print("Testing getopt...\n")
test_positional()
test_longopts()
test_shortopts()