// This is the entry point for a language server as defined by the LSP
import vector
import json

type Header = &Vector(&string)

def get(header: Header, key: &string) -> &string {
    for var i in 0..header.length {
        let entry = header[i]
        if entry.starts_with(key + ": ") {
            return entry.substring(entry.index_of(": ") + 2)
        }
    }
}

def read_header -> Header {
    return vector::make(type &string)
}

def read_message -> &JsonTree {
    let header = read_header()
}

export def main {
    loop {
        let message = read_message()
    }
}