import common
import json

def lex(str: &string) -> &Json {
    return json::parse(common::run_compiler(str, "--tokens"))
}

def #test test_empty_file {
    assert lex("") == json::parse("""[{
        "kind": "EOF",
        "line": 0,
        "column": 0
    }]""")
}

def #test test_float_literal {
    assert lex("123.45678")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 123.45678
    }""")

    assert lex(".5")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 0.5
    }""")

    assert lex("10.")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 10
    }""")

    assert lex("10E10")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 10000000000
    }""")

    assert lex("10.e10")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 10000000000
    }""")

    assert lex("10E+10")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 10000000000
    }""")

    assert lex("10E-5")[0] == json::parse("""{\
        "kind": "FLOAT", "line": 0, "column": 0, "value": 0.0001
    }""")
}

def #test test_int_literal {
    assert lex("156")[0] == json::parse("""{\
        "kind": "INTEGER", "line": 0, "column": 0, "value": 156
    }""")

    assert lex("0b100100")[0] == json::parse("""{\
        "kind": "INTEGER", "line": 0, "column": 0, "value": 36
    }""")

    assert lex("0xDEADBABE")[0] == json::parse("""{\
        "kind": "INTEGER", "line": 0, "column": 0, "value": 3735927486
    }""")
    
    assert lex("0o172")[0] == json::parse("""{\
        "kind": "INTEGER", "line": 0, "column": 0, "value": 122
    }""")
}

def #test test_char_literal {
    assert lex("'A'")[0] == json::parse("""{\
        "kind": "CHAR", "line": 0, "column": 0, "value": 65
    }""")
    
    assert lex("'A' 'B'") == json::parse("""[\
        { "kind": "CHAR", "line": 0, "column": 0, "value": 65 },
        { "kind": "WHITESPACE", "line": 0, "column": 3 },
        { "kind": "CHAR", "line": 0, "column": 4, "value": 66 },
        { "kind": "EOF", "line": 0, "column": 6 }
    ]""")

    assert lex("'\\a'")[0] == json::parse("""{\
        "kind": "CHAR", "line": 0, "column": 0, "value": 7
    }""")

    assert lex("'\\xFF'")[0] == json::parse("""{\
        "kind": "CHAR", "line": 0, "column": 0, "value": 255
    }""")
}