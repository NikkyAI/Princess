@@grammar :: Princess
@@whitespace :: /(?!)/ # TODO https://github.com/neogeny/TatSu/issues/73
@@parseinfo :: True

program::Program = LIST:{statement};

# Whitespace
t_newline = /[\n]+/ | t_eol_comment;
t_ws = /[\t ]+/;

_ = {t_ws | t_comment}; # Whitespace
_n = {t_newline | _}; # "Continue statement", this wraps around lines

k_if = "if";
k_else = "else";

t_keyword = k_if | k_else; 

t_number::Integer = VALUE:(/\d+/);
t_term = ';' | $ | t_newline;

digit  = /[0-9]/;
hex_digit = /[a-fA-F0-9]/;
oct_digit = /[0-8]/;

# String literal
esc_seq = '\\' ~ (
    | /[abfnrtv\\'"0]/
    | (/x/ ~ hex_digit hex_digit) # Hex digit
    | (/u/ ~ hex_digit hex_digit hex_digit hex_digit) # Unicode
    | (/U/ ~ hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit) # Extended Unicode
);

t_char = (esc_seq | /[^\0\x7f\x80"\\]+/);
t_char_lit::Char = "'" VALUE:t_char ~ "'";
t_string_lit::String = '"' VALUE:{t_char} ~ '"';

t_ident::Identifier = !t_keyword VALUE:/(?!\d)\w+/;

literal = (t_number | t_ident | t_char_lit | t_string_lit);

t_comment_start = "/*";
t_comment_end = "*/";
t_comment = t_comment_start {(!t_comment_end !t_comment_start /.|\n/) | t_comment} ~ t_comment_end;

t_eol_comment = "//" /[^\n]+/ ('\n' | $);

# FIXME Bug: https://github.com/neogeny/TatSu/issues/69

expr_pre::UnaryPreOp = op:('++'|'+'|'--'|'-'|'@'|'*') _n ~ right:expr_2;
expr_mul::BinaryOp = left:expr_1 _ op:('*'|'/'|'%') _n ~ right:expr_2;
expr_add::BinaryOp = left:expr_0 _ op:('+'|'-') _n ~ right:expr_1;

expr_3 =
    | '(' ~ _n @:expression _n ')' # TODO: Doesn't handle skipping newlines inside the expression, this should be _n_expression
    | literal;

expr_2 =
    | expr_pre
    | expr_3;

expr_1 =
    | expr_mul
    | expr_2;

expr_0 = 
    | expr_add
    | expr_1;

expression::Expression = VALUE:expr_0;

statement =
    | _ @:() t_term
    | ~ _ @:expression _ t_term;